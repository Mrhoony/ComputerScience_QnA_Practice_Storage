언리얼 엔진 가비지 컬렉션의 기본 원리: 언리얼 엔진의 가비지 컬렉션 시스템은 어떤 방식으로 UObject 기반 메모리를 관리하며, 참조(Reference) 추적을 통해 더 이상 사용되지 않는 객체를 어떻게 식별하고 해제하는지 설명하시오.

UPROPERTY() 매크로의 역할: UObject를 상속받은 클래스에서 다른 UObject 포인터를 멤버 변수로 가질 때 UPROPERTY() 매크로를 사용하는 주된 이유는 무엇이며, 이 매크로가 가비지 컬렉터가 해당 참조를 인식하고 객체의 생명 주기를 올바르게 관리하는 데 어떻게 기여하는지 설명하시오.

TWeakObjectPtr의 활용: TWeakObjectPtr는 무엇이며, UObject에 대한 강한 참조(Strong Reference)를 생성하지 않으면서도 객체를 안전하게 참조해야 할 때(예: 순환 참조 방지, 객체 소멸 여부 확인) 어떻게 사용되는지 설명하시오. TWeakObjectPtr가 GC에 미치는 영향은 무엇인가요?

가비지 컬렉션의 트리거 시점 및 최적화: 언리얼 엔진에서 가비지 컬렉션이 일반적으로 언제(예: 레벨 로드/언로드, 특정 메모리 임계값 초과) 트리거되는지 설명하시오. 또한, 가비지 컬렉션으로 인한 게임 스톨(Stall) 현상을 최소화하기 위한 개발자로서의 최적화 전략(예: CollectGarbage() 호출 제어, 참조 최소화)을 제시하시오.

AddReferencedObjects() 함수와 GC: UObject가 아닌 일반 C++ 클래스(예: TSharedPtr로 관리되는 객체)가 UObject를 참조하는 경우, 가비지 컬렉터가 해당 UObject를 올바르게 추적하도록 하기 위해 AddReferencedObjects() 함수를 어떻게 활용할 수 있는지 설명하시오.