C++에서 함수 포인터(Function Pointer)와 std::function의 차이점을 설명하고, std::function 사용 시 장점에 대해 설명하시오.

C++17에 도입된 std::optional, std::variant, std::any 중 std::optional의 사용 목적과 이점을 설명하시오.

C++에서 placement new 연산자는 언제, 왜 사용하며 일반 new와 어떤 차이가 있는지 설명하시오.

C++에서 식별자(Identifier)의 내부 연결(Internal Linkage)과 외부 연결(External Linkage)의 차이점을 설명하시오.

C++의 ODR(One Definition Rule)이란 무엇이며, 이를 위반했을 때 발생할 수 있는 문제점을 설명하시오.

C++ 스마트 포인터(예: std::unique_ptr, std::shared_ptr)에 커스텀 삭제자(Custom Deleter)를 사용하는 방법과 목적을 설명하시오.

C++ <chrono> 라이브러리를 사용하여 시간 측정이나 시간 관련 연산을 수행하는 기본적인 방법에 대해 설명하시오.

정렬 알고리즘의 안정성(Stability)이란 무엇이며, 안정적인 정렬 알고리즘(예: Merge Sort)과 불안정한 정렬 알고리즘(예: Quick Sort)의 차이를 설명하시오.

게임 클라이언트가 서버와 통신할 때, NAT(Network Address Translation)나 방화벽이 어떤 문제를 유발할 수 있으며, 이를 해결하기 위한 일반적인 방법에는 무엇이 있는지 간략히 설명하시오.

웹 통신에 주로 사용되는 HTTP 프로토콜과 게임에서 자주 사용되는 소켓(Socket) 통신(TCP/UDP)의 차이점을 설명하고, 게임에서 소켓 통신이 더 적합한 이유를 설명하시오.

파일 시스템의 기본적인 구조(예: 디렉터리, 파일, i-node 또는 MFT)에 대해 간략히 설명하시오.

3D 그래픽스에서 밉맵(Mipmaps)과 텍스처 필터링(예: Linear, Trilinear, Anisotropic)이 필요한 이유와 각각의 역할을 설명하시오.

3D 그래픽스 렌더링에서 기본적인 조명 모델(예: Ambient, Diffuse)의 개념을 설명하시오.

언리얼 엔진 AI 시스템의 EQS(Environment Query System)는 무엇이며, AI 에이전트가 환경 정보를 바탕으로 의사결정하는 데 어떻게 활용되는지 설명하시오.

언리얼 엔진 애니메이션 시스템에서 Anim Notify는 무엇이며, 애니메이션 재생 중 특정 시점에 이벤트를 발생시키는 데 어떻게 사용되는지 설명하시오.

언리얼 엔진 스켈레탈 메시(Skeletal Mesh)에서 소켓(Socket)은 무엇이며, 어떤 목적으로 사용되는지 실무적인 예시(예: 무기 장착, 이펙트 부착)를 들어 설명하시오.

언리얼 엔진 피직스 시스템에서 물리 컨스트레인트(Physics Constraint)는 무엇이며, 오브젝트 간의 물리적 관계(예: 관절, 스프링)를 모델링하는 데 어떻게 사용되는지 설명하시오.

언리얼 엔진의 물리 엔진인 Chaos와 기존 PhysX의 차이점에 대해 아는 대로 간략히 설명하시오.

언리얼 엔진 블루프린트 개발 시 C++로 작성하는 블루프린트 함수 라이브러리(Blueprint Function Library)와 블루프린트 매크로 라이브러리(Blueprint Macro Library)의 차이점을 설명하시오.

언리얼 엔진에서 플랫폼(PC, Console, Mobile 등)별 코드를 분기 처리하기 위한 방법(예: #if PLATFORM_WINDOWS)과 관리 방법에 대해 설명하시오.