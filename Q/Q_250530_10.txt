C++17에 도입된 std::string_view는 무엇이며, 문자열 데이터를 참조할 때 const std::string&를 사용하는 것보다 어떤 성능상 이점(예: 복사 방지)을 가지는지 설명하시오.

C++17의 std::filesystem 라이브러리를 사용하여 파일이나 디렉터리 경로를 다루는 기본적인 방법(예: 파일 존재 여부 확인, 디렉터리 생성)에 대해 설명하시오.

PIMPL(Pointer to IMPLementation) idiom은 무엇이며, C++에서 컴파일 시간 의존성(Compile-time Dependencies)을 줄이고 라이브러리의 ABI(Application Binary Interface) 안정성을 향상시키는 데 어떻게 기여하는지 설명하시오.



3D 그래픽스에서 텍스처 압축(Texture Compression)이 필요한 주된 이유(메모리 절약, 대역폭 감소)와 DXT(또는 BC) 형식과 같은 블록 기반 압축 방식의 기본적인 원리를 설명하시오.

네트워크 게임에서 "QoS(Quality of Service)"란 무엇이며, 패킷 손실이나 지터(Jitter)가 심한 환경에서 플레이어 경험을 개선하기 위해 어떤 QoS 전략(예: 대역폭 제한, 패킷 우선순위)을 고려할 수 있는지 설명하시오.

컴퓨터 성능 분석 시 CPU 캐시 메모리 계층(L1, L2, L3 캐시)의 일반적인 특성(속도, 크기)을 설명하고, 캐시의 지역성(Locality)이 프로그램 성능에 어떤 영향을 미치는지 설명하시오.



언리얼 엔진에서 머티리얼 인스턴싱(Material Instancing)은 무엇이며, 동적 머티리얼 인스턴스(Dynamic Material Instance) 생성 시 머티리얼 파라미터를 변경하는 방식이 어떤 성능적 이점을 제공하는지 설명하시오.

언리얼 엔진에서 Stat 명령(예: Stat Unit, Stat FPS, Stat Game)을 사용하여 게임의 성능을 프로파일링할 때, 각 명령이 보여주는 주요 지표는 무엇이며 어떤 정보를 제공하는지 설명하시오.

언리얼 엔진 애니메이션 시스템에서 "Layered Blend per Bone" 노드는 무엇이며, 캐릭터의 특정 신체 부위(예: 상체, 하체)에만 애니메이션을 블렌딩하거나 겹칠 때 어떻게 사용되는지 설명하시오.

언리얼 엔진 네트워크 복제(Replication)에서 액터의 bAlwaysRelevant 플래그는 어떤 의미를 가지며, 이 플래그를 언제(예: 항상 모든 클라이언트에 보여야 하는 액터) 사용하는 것이 적절한지 설명하시오.
