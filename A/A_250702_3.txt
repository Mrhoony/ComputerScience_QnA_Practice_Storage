OSI 7 계층 모델에 대해 설명하고 각 계층의 역할과 주요 프로토콜을 아는 대로 설명해주세요.
->
OSI 7 계층 모델은 국제 표준화 기구(ISO)에서 네트워크 통신 과정을 7단계로 나눈 개념적인 모델입니다. 각 계층은 독립적인 기능을 수행하며 서로 간에 데이터를 주고받아 통신이 이루어집니다.

1계층: 물리 계층 (Physical Layer)
역할: 비트(Bit) 단위의 데이터를 물리적인 매체(케이블, 무선 등)를 통해 전송합니다. 전압, 주파수, 케이블 종류 등 물리적 연결 및 전기적 특성을 규정합니다.
주요 프로토콜: Ethernet (물리적 측면)
데이터 단위: 비트 (Bit)

2계층: 데이터 링크 계층 (Data Link Layer)
역할: 물리 계층을 통해 전송되는 데이터의 오류를 감지하고 프레임(Frame) 단위로 데이터를 전송합니다. MAC 주소를 사용하여 동일 네트워크 내의 장치 간 통신을 제어합니다.
주요 프로토콜: Ethernet (MAC/LLC)
데이터 단위: 프레임 (Frame)

3계층: 네트워크 계층 (Network Layer)
역할: 여러 네트워크 간의 라우팅(경로 설정)을 담당하며 IP 주소를 사용하여 목적지까지 데이터를 전송합니다. 논리적 주소(IP주소)를 통해 통신 경로를 결정합니다.
주요 프로토콜/장비: IP, ICMP, ARP, 라우터
데이터 단위: 패킷 (Packet)

4계층: 전송 계층 (Transport Layer)
역할: 종단(End-to-End) 간의 신뢰성 있는 데이터 전송을 담당합니다. 포트 번호를 사용하여 어떤 애플리케이션으로 데이터가 전달될지 결정하고 흐름 제어, 혼잡 제어, 오류 복구 등을 수행합니다.
주요 프로토콜/장비: TCP, UDP, 방화벽 (일부)
데이터 단위: 세그먼트 (Segment, TCP), 데이터그램 (Datagram, UDP)

5계층: 세션 계층 (Session Layer)
역할: 통신하는 두 애플리케이션 간의 세션(연결)을 설정, 유지, 종료하는 역할을 합니다. 동기화 및 복구 기능을 제공합니다.
주요 프로토콜: NetBIOS, RPC
데이터 단위: 데이터

6계층: 표현 계층 (Presentation Layer)
역할: 데이터의 형식(인코딩, 압축, 암호화)을 변환하여 애플리케이션 계층이 데이터를 이해할 수 있도록 합니다.
주요 프로토콜: JPEG, MPEG, ASCII, TLS/SSL (암호화 부분)
데이터 단위: 데이터

7계층: 애플리케이션 계층 (Application Layer)
역할: 사용자에게 직접 서비스를 제공하는 계층입니다. 다양한 네트워크 서비스(웹 브라우징, 이메일, 파일 전송 등)를 제공합니다.
주요 프로토콜: HTTP, FTP, SMTP, DNS, SSH, Telnet
데이터 단위: 데이터


IP 주소는 무엇이며 IPv4와 IPv6의 차이점에 대해 설명해주세요.
->
IP 주소: 인터넷에 연결된 모든 장치(컴퓨터, 스마트폰, 서버 등)에 부여되는 고유한 식별 번호입니다. 네트워크에서 장치를 식별하고 데이터를 주고받기 위한 논리적 주소입니다. IP 주소를 통해 패킷이 목적지까지 정확히 라우팅될 수 있습니다.

IPv4 (Internet Protocol version 4)
형식: 32비트 주소 체계로 8비트씩 4개의 옥텟(Octet)으로 구성되며 각 옥텟은 0~255의 숫자로 표현됩니다.
표현: 점(.)으로 구분된 10진수 4개 (Dot-decimal notation)
주소 개수: 약 43억 개 (2^32)
문제점: 주소 고갈 문제에 직면했습니다.

IPv6 (Internet Protocol version 6)
형식: 128비트 주소 체계로 16비트씩 8개의 헥스텟(Hextet)으로 구성되며 각 헥스텟은 16진수로 표현됩니다.
표현: 콜론(:)으로 구분된 16진수 8개, 생략 규칙이 존재(0000은 0으로, 연속된 0 블록은 ::으로 압축 가능)
주소 개수: 약 3.4 x 10^38개 (2^128)
장점: 주소 고갈 문제 해결, 향상된 보안(IPSec 내장), 효율적인 라우팅, Plug and Play, 모바일 지원


HTTP와 HTTPS의 차이점은 무엇이며, HTTPS가 보안을 강화하는 원리에 대해 설명해주세요.
->
HTTP.
암호화되지 않은 평문 통신 프로토콜입니다.
기본적으로 80번 포트를 사용합니다.
데이터가 중간에 가로채지면 내용이 그대로 노출될 수 있어 보안에 취약합니다.
데이터 무결성이 보장되지 않습니다.

HTTPS.
HTTP에 SSL(Secure Socket Layer) 또는 그 후속 기술인 TLS(Transport Layer Security) 프로토콜을 추가하여 보안을 강화한 버전입니다.
기본적으로 443번 포트를 사용합니다.
데이터 암호화, 데이터 무결성 보장, 서버 인증 기능을 제공하여 보안이 강화됩니다.

HTTPS가 보안을 강화하는 원리: 데이터 암호화 -> 데이터 무결성 -> 서버 인증